{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js","Recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","className","style","recipe","src","alt","map","ingredient","text","calorie","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","console","log","onSubmit","e","preventDefault","type","value","onChange","target","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"2QAiBeA,MAdf,YAA0D,IAAxCC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,YACtC,OACI,sBAAKC,UAAWC,IAAMC,OAAtB,UACI,oBAAIF,UAAWC,IAAML,MAArB,SAA6BA,IAC7B,qBAAKI,UAAWC,IAAMH,MAAOK,IAAKL,EAAOM,IAAI,KAC7C,mCAAiB,4BAAG,+CACfL,EAAYM,KAAI,SAAAC,GAAU,OACvB,6BAAKA,EAAWC,YAFfX,GAKT,oBAAGI,UAAWC,IAAMO,QAApB,UAA6B,4BAAG,4CAAhC,IAAsDX,SC2CnDY,G,MApDL,WAER,IAIA,EAA2BC,mBAAS,IAApC,mBAAOC,EAAP,KAAeC,EAAf,KAEA,EAAyBF,mBAAS,IAAlC,mBAAOG,EAAP,KAAcC,EAAd,KAEA,EAAuBJ,mBAAS,SAAhC,mBAAOK,EAAP,KAAaC,EAAb,KAaAC,qBAAU,WACRC,MACA,CAACH,IAEH,IAAMG,EAAU,uCAAC,8BAAAC,EAAA,sEACOC,MAAM,mCAAD,OAAoCL,EAApC,mBA1BhB,WA0BgB,oBAzBf,uCAwBG,cACTM,EADS,gBAEGA,EAASC,OAFZ,OAETC,EAFS,OAGfX,EAAWW,EAAKC,MAChBC,QAAQC,IAAIH,EAAKC,MAJF,2CAAD,qDAShB,OACE,sBAAKxB,UAAU,MAAf,UACA,uBAAO2B,SArBO,SAAAC,GACdA,EAAEC,iBACFb,EAASH,GACTC,EAAU,MAkBkBd,UAAU,cAAtC,UACE,uBAAOA,UAAU,aAAa8B,KAAK,OAAOC,MAAOlB,EAAQmB,SA1BzC,SAAAJ,GAClBd,EAAUc,EAAEK,OAAOF,UA0BjB,wBAAQ/B,UAAU,gBAAgB8B,KAAK,SAAvC,uBAEF,qBAAK9B,UAAU,SAAf,SACCW,EAAQN,KAAI,SAAAH,GAAM,OACjB,cAAC,EAAD,CAAkCN,MAAOM,EAAOA,OAAOgC,MAAOrC,SAAUK,EAAOA,OAAOL,SACtFC,MAAOI,EAAOA,OAAOJ,MAAOC,YAAaG,EAAOA,OAAOH,aAD1CG,EAAOA,OAAOgC,iBCpClBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,MAAQ,sBAAsB,QAAU,2B","file":"static/js/main.17d8f59d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport style from './Recipe.module.css';\r\n\r\nfunction Recipe({ title, calories, image, ingredients }) {\r\n    return (\r\n        <div className={style.recipe}>\r\n            <h1 className={style.title}>{title}</h1>\r\n            <img className={style.image} src={image} alt=\"\" />\r\n            <ul key={title}> <b><u>INGREDIENTS:</u></b>\r\n                {ingredients.map(ingredient => (\r\n                    <li>{ingredient.text}</li>\r\n                ))}\r\n            </ul>\r\n            <p className={style.calorie}><b><i>CALORIES:</i></b> {calories}</p>\r\n        </div>\r\n    );\r\n}\r\nexport default Recipe;\r\n","import React,{useEffect,useState} from 'react';\nimport Recipe from './Recipe';\nimport './App.css'\n\nconst App=()=> {\n\n  const APP_ID=\"0f3e1968\";\n  const APP_KEY=\"6d5edf335a566b8bdd5f8e6315cc700f\t\";\n\n\n  const [recipes,setRecipes]=useState([]);\n\n  const [search,setSearch]=useState(\"\");\n\n  const [query,setQuery]=useState(\"apple\");\n\n\n  const updateSearch= e=>{\n    setSearch(e.target.value);\n  }\n\n  const getSearch=e=>{\n    e.preventDefault();\n    setQuery(search);\n    setSearch(\" \")\n  }\n\n  useEffect(()=>{\n    getRecipes();\n  },[query]);\n\n  const getRecipes=async()=>{\n    const response= await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    const data= await response.json();\n    setRecipes(data.hits);\n    console.log(data.hits);\n  }\n\n\n\n  return (\n    <div className=\"App\">\n    <form  onSubmit={getSearch} className=\"search-form\">\n      <input className=\"search-bar\" type=\"text\" value={search} onChange={updateSearch}/>\n      <button className=\"search-button\" type=\"submit\">search</button>\n    </form>\n    <div className='recipe'>\n    {recipes.map(recipe=>(\n      <Recipe key={recipe.recipe.label} title={recipe.recipe.label} calories={recipe.recipe.calories} \n      image={recipe.recipe.image} ingredients={recipe.recipe.ingredients} />\n    ))}\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"Recipe_recipe__3dwGb\",\"title\":\"Recipe_title__H2dDO\",\"image\":\"Recipe_image__2nytO\",\"calorie\":\"Recipe_calorie__18O53\"};"],"sourceRoot":""}